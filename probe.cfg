[gcode_macro _Probe_Variables]
variable_dock_location_x:       250     ; X Dock position
variable_dock_location_y:       299.5   ; Y Dock position
variable_dock_location_z:       30      ; Z dock position

variable_fr:                    4000

variable_probe_height:          15
variable_attach_move_y:         -20     ; Distance to move Y before moving to attach

variable_dock_move_x:           -35     ; Distance to move X after docked the probe

variable_probe_attached:        False
variable_probe_state:           False

gcode:
    ; do nothing

# Check to see if probe is where it is supposed to be after
# attaching/docking maneuver and set homing error or shutdown
[gcode_macro _CheckProbe]
variable_probe_state: 0
gcode:
    QUERY_PROBE
    _SetProbeState action={ params.ACTION }

# Due to how templates are evaluated, we have query endstops in one
# macro and call another macro to make decisions based on the result
[gcode_macro _SetProbeState]
gcode:
    {% set query_probe_triggered = printer.probe.last_query %}
    {% set action  = params.ACTION|default('') %}

    # If triggered (true), probe not attached
    {% if query_probe_triggered %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ False }
    {% else %}
        # If not triggered (false), probe attached
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_attached VALUE={ True }
    {% endif %}

    {% if action == 'query' %}
          SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_state VALUE={ query_probe_triggered }
    {% endif %}

    # If probe fails to attach/detach

    # If not docked
    {% if not query_probe_triggered and action == 'dock' %}
        { action_raise_error("Probe dock failed!") }
    {% endif %}

    # If not attached
    {% if query_probe_triggered and action == 'attach' %}
        { action_raise_error("Probe attach failed!") }
    {% endif %}

######################
# Attach Probe Routine
[gcode_macro Attach_Probe]
description: Attaches Klicky Probe
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not global.has_attachable_probe %}
        { action_raise_error("Machine without Attacheable probe!") }
    {% endif %}

    # Get probe attach status
    {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}

    {% set fr = printer["gcode_macro _Probe_Variables"].fr %}

    {% set dock_location_x = printer["gcode_macro _Probe_Variables"].dock_location_x %}
    {% set dock_location_y = printer["gcode_macro _Probe_Variables"].dock_location_y %}

    {% set probe_height  = printer["gcode_macro _Probe_Variables"].probe_height %}

    {% set attach_move_y = printer["gcode_macro _Probe_Variables"].attach_move_y %}

    # If not homed
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Please home first!") }

    # If probe not attached
    {% elif not probe_attached %}
        M117 Attaching Probe

        # Probe Attach
        {% if printer.toolhead.position.z < probe_height %}
            G91
            G0 Z{probe_height} F{fr}                   ; Position the toolhead in a safe position
        {% endif %}
        G90                                             ; Do the attach move
        G0 Y{dock_location_y + attach_move_y}
        G0 X{dock_location_x} F{fr}
        G0 Y{dock_location_y} F{fr}
        G0 Y{dock_location_y + attach_move_y}

        _CheckProbe action=attach

    {% else %}
        {% if verbose %}
            M117 Probe already attached!
        {% endif %}

        # Probe attached, do nothing
        _CheckProbe action=query

    {% endif %}

######################
# Dock Probe Routine
[gcode_macro Dock_Probe]
description: Docks Klicky Probe
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not global.has_attachable_probe %}
        { action_raise_error("Machine without Attacheable probe!") }
    {% endif %}

    # Get probe attach status
    {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}

    {% set fr = printer["gcode_macro _Probe_Variables"].fr %}

    {% set dock_location_x = printer["gcode_macro _Probe_Variables"].dock_location_x %}
    {% set dock_location_y = printer["gcode_macro _Probe_Variables"].dock_location_y %}
    {% set dock_location_z = printer["gcode_macro _Probe_Variables"].dock_location_z %}

    {% set probe_height = printer["gcode_macro _Probe_Variables"].probe_height %}
    {% set dock_move_x = printer["gcode_macro _Probe_Variables"].dock_move_x %}

     {% set attach_move_y = printer["gcode_macro _Probe_Variables"].attach_move_y %}

    # If x and y are not homed
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Please home first!") }

    # If probe attached
    {% elif probe_attached %}
        M117 Docking Probe

        # Probe Dock
        {% if printer.toolhead.position.z < probe_height %}
            G91
            G0 Z{probe_height} F{fr}                   ; Position the toolhead in a safe position
        {% endif %}
        G90                                             ; Do the dock move
        G0 Y{dock_location_y + attach_move_y}
        G0 X{dock_location_x} F{fr}
        G0 Y{dock_location_y} F{fr}
        G0 X{dock_location_x + dock_move_x}
        M400

        _CheckProbe action=dock

    {% else %}
        M117 Probe already docked

        # Probe docked, do nothing
        _CheckProbe action=query

    {% endif %}
