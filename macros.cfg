#####################################################################
#    Global Variables
#####################################################################

[gcode_macro global]
variable_has_attachable_probe:  True
variable_hotend_max_temp_g28:   40
variable_print_end_clean_temp:  180
variable_moving_macros_slow_fr: 2400    ; 40
variable_moving_macros_fr:      4800    ; 80
variable_moving_macros_fast_fr: 18000   ; 300
variable_retraction_fr:         1800    ; 30
variable_retraction_fast_fr:    3600    ; 60
variable_extrude_fr:            180     ; 3
variable_extrude_fast_fr:       300     ; 5

gcode:
    ; Nothing


#####################################################################
#    Moving
#####################################################################

[gcode_macro CENTER]
gcode:
    {% set posx = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set posy = printer.toolhead.axis_maximum.y|float / 2.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro FRONT_LEFT]
gcode:
    {% set posx = printer.toolhead.axis_minimum.x|float + 15.0 %}
    {% set posy = printer.toolhead.axis_minimum.y|float + 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro FRONT_RIGHT]
gcode:
    {% set posx = printer.toolhead.axis_maximum.x|float - 15.0 %}
    {% set posy = printer.toolhead.axis_minimum.y|float + 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro FRONT_CENTER]
gcode:
    {% set posx = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set posy = printer.toolhead.axis_minimum.y|float + 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro BACK_LEFT]
gcode:
    {% set posx = printer.toolhead.axis_minimum.x|float + 15.0 %}
    {% set posy = printer.toolhead.axis_maximum.y|float - 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro BACK_RIGHT]
gcode:
    {% set posx = printer.toolhead.axis_maximum.x|float - 15.0 %}
    {% set posy = printer.toolhead.axis_maximum.y|float - 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro BACK_CENTER]
gcode:
    {% set posx = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set posy = printer.toolhead.axis_maximum.y|float - 15.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{posx} Y{posy} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro CUBE_CENTER]
gcode:
    {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
    {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
    {% set z_center = printer.toolhead.axis_maximum.z|float / 2.0 %}
    SAVE_GCODE_STATE NAME=moving
    G90
    G1 X{x_center} Y{y_center} Z{z_center} F{printer["gcode_macro global"].moving_macros_fast_fr}
    RESTORE_GCODE_STATE NAME=moving

[gcode_macro ENTER_IDLE]
gcode:
    M18

#####################################################################
#    Homing, Gantry related
#####################################################################

[gcode_macro _BASE_FOR_CALIBRATION]
gcode:
    {% set global = printer["gcode_macro global"] %}

    ; Set a fixed temperature for the hotend for calibration
    M117 Setting calibration temperature({global.hotend_max_temp_g28}C)

    M104 S{global.hotend_max_temp_g28} ; Hotend temperature
    M140 S{global.hotend_max_temp_g28} ; Bed temperature

    M109 S{global.hotend_max_temp_g28} ; Wait for Hotend
    M190 S{global.hotend_max_temp_g28} ; Wait for Bed

[gcode_macro G28]
rename_existing: G0028
gcode:
    STATUS_HOMING

    _BASE_FOR_CALIBRATION

    M117 Homing
    G0028 { rawparams }
    M117
    TURN_OFF_HEATERS

    STATUS_READY

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: __BED_MESH_CALIBRATE
description: Perform Mesh Bed Leveling with klicky automount
gcode:
    {% set global = printer["gcode_macro global"] %}

    STATUS_LEVELING

    _BASE_FOR_CALIBRATION

    {% if global.has_attachable_probe %}
        _CheckProbe action=query
        G90
        Attach_Probe
    {% endif %}

    __BED_MESH_CALIBRATE {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}

    {% if global.has_attachable_probe %}
        Dock_Probe
    {% endif %}

    TURN_OFF_HEATERS

    STATUS_READY

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: __QUAD_GANTRY_LEVEL
description: Conform a moving, twistable gantry to the shape of a stationary bed with klicky automount
gcode:
    STATUS_LEVELING

    _BASE_FOR_CALIBRATION

    {% if global.has_attachable_probe %}
        _CheckProbe action=query
        G90
        Attach_Probe
    {% endif %}

    __QUAD_GANTRY_LEVEL {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
            endfor %}

    {% if global.has_attachable_probe %}
        Dock_Probe
    {% endif %}

    TURN_OFF_HEATERS

    STATUS_READY

[gcode_macro PROBE_ACCURACY]
rename_existing: __PROBE_ACCURACY
description:Probe Z-height accuracy at current XY position with klicky automount
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X, Y and Z Axis First!") }
    {% endif %}

    {% if global.has_attachable_probe %}
        _CheckProbe action=query
        G90
        Attach_Probe
    {% endif %}

    __PROBE_ACCURACY {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
            endfor %}

    {% if global.has_attachable_probe %}
        Dock_Probe
    {% endif %}

[gcode_macro PROBE_CALIBRATE]
rename_existing: __PROBE_CALIBRATE
gcode:
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X, Y and Z Axis First!") }
    {% endif %}

    {% if global.has_attachable_probe %}
        { action_raise_error("PROBE_CALIBRATE disabled with attachable probe!") }
    {% else %}
        __PROBE_CALIBRATE {% for p in params
                %}{'%s=%s ' % (p, params[p])}{%
                endfor %}
    {% endif %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28
    # BED_MESH_PROFILE LOAD=default
    BACK_CENTER

    STATUS_READY

#####################################################################
#    Print related
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED = params.BED|default(100)|int %}
    {% set EXTRUDER = params.EXTRUDER|default(240)|int %}
    {% set CHAMBER = params.CHAMBER|default(60)|int %}

    {% if printer['output_pin chamberlight'].value <= 0 %}
        CHAMBERLIGHT_25
    {% endif %}

    {% if not "xyz" in printer.toolhead.homed_axes or not printer.quad_gantry_level.applied %}
        G32                         ; Get moving ready
    {% endif %}

    M104 S{EXTRUDER}                ; Set temperatures
    M140 S{BED}                     ;

    BUCKET_POSITION                 ; Position the Toolhead in the nozzle cleaning position

    M109 S{EXTRUDER}                ; Wait for temperatures
    M190 S{BED}

    PURGE_NOZZLE
    CLEAN_NOZZLE

    STATUS_PRINTING

[gcode_macro PRINT_END]
gcode:
    {% set global = printer["gcode_macro global"] %}

    M400                                                        ; wait for buffer to clear
    G92 E0                                                      ; zero the extruder
    G1 E-10.0 F{global.retraction_fr}    ; retract filament
    G91                                                         ; relative positioning
    G1 Z5 F{global.moving_macros_fr}     ; move nozzle to remove stringing
    M107                                                        ; turn off fan
    TURN_OFF_HEATERS

    ; Clean nozzle on cooldown
    G90                                                         ; absolute positioning
    BUCKET_POSITION                                             ; position the nozzle in the bucket
    M106 S255   ; Help cooldown nozzle
    M104 S{global.print_end_clean_temp}
    M109 S{global.print_end_clean_temp}
    M104 S{global.print_end_clean_temp - 30} ; Pre set the next temperature
    CLEAN_NOZZLE
    BUCKET_POSITION
    M109 S{global.print_end_clean_temp - 30}
    TURN_OFF_HEATERS
    CLEAN_NOZZLE
    M107        ; Turn off fan

    BACK_RIGHT                                                  ; park nozzle at rear
    STATUS_OFF
    CHAMBERLIGHT_OFF

[gcode_macro BUCKET_POSITION]
description: Position the Nozzle in the cleaning position
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not "xyz" in printer.toolhead.homed_axes %}
      { action_raise_error("Please home first!") }
    {% else %}
        SAVE_GCODE_STATE NAME=bucket
        G91
        G1 Z5 F{global.moving_macros_fr}
        G90
        G1 X45 Y310 F{global.moving_macros_fast_fr}
        G1 Z0.4 F{global.moving_macros_fr}
        RESTORE_GCODE_STATE NAME=bucket
    {% endif %}

[gcode_macro CLEAN_NOZZLE]
description: Clean the Nozzle in the bed brush
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not "xyz" in printer.toolhead.homed_axes %}
      { action_raise_error("Please home first!") }
      M117 Please home first!
    {% else %}
        SAVE_GCODE_STATE NAME=clean

        G90
        G1 Z5 F{global.moving_macros_fr}
        G1 X58 Y310 F{global.moving_macros_fast_fr}
        G1 Z2.5 F{global.moving_macros_fr}
        G91

        G1 X5.167  Y-4 F{global.moving_macros_fr}
        G1 X10.333 Y4
        G1 X10.333 Y-4
        G1 X5.167  Y4
        G1 X-31.0
        G1 Y-1
        G1 X31.0
        G1 Y1
        G1 X-31.0

        G1 X5.167 Y-4
        G1 X10.333 Y4
        G1 X10.333 Y-4
        G1 X5.167 Y4
        G1 X-31.0
        G1 Y-1
        G1 X31.0
        G1 Y1
        G1 X-31.0

        G1 X5.167  Y-4
        G1 X10.333 Y4
        G1 X10.333 Y-4
        G1 X5.167  Y4
        G1 X-31.0
        G1 Y-1
        G1 X31.0
        G1 Y1
        G1 X-31.0

        G1 Z2.5 F{global.moving_macros_fr}

        G1 Y-20 F{global.moving_macros_fast_fr}

        RESTORE_GCODE_STATE NAME=clean
    {% endif %}

[gcode_macro PURGE_NOZZLE]
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not "xyz" in printer.toolhead.homed_axes %}
      { action_raise_error("Please home first!") }
      M117 Please home first!
    {% else %}
      {% if not printer.extruder.temperature >= 200 %}
        { action_raise_error("Heat up nozzle first!") }
        M117 Heat up nozzle first!
      {% else %}
        M117 Purging nozzle
        STATUS_CLEANING

        BUCKET_POSITION

        SAVE_GCODE_STATE NAME=purge

        ; Purge nozzle while moving Toolhead
        M83
        G92 E0
        G90
        G1 X{ range(3, 6) | random } E20 F{global.extrude_fr}
        G1 Z0.3 F{global.moving_macros_fr}
        G1 Y270 F{global.moving_macros_slow_fr}        ; Move nozzle to cut the purged filament
        G92 E0
        G1 Z5 F{global.moving_macros_fr}
        M117
        RESTORE_GCODE_STATE NAME=purge
      {% endif %}
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not "xyz" in printer.toolhead.homed_axes %}
        { action_raise_error("Please home first!") }
        M117 Please home first!
    {% else %}
        {% if not printer.extruder.temperature >= 200 %}
            { action_raise_error("Heat up nozzle first!") }
            M117 Heat up nozzle first!
        {% else %}
            SAVE_GCODE_STATE NAME=unload_filament

            G90
            G1 Z110 F{global.moving_macros_fr}
            FRONT_CENTER

            ; Extruder in relative mode
            M83
            G1 E10 F{global.extrude_fast_fr}     ; extrude a little to soften new filament
            M117 Unloading
            G1 E-45 F{global.retraction_fr}      ; retract filament completely
            G1 E-45 F{global.retraction_fr}      ; retract filament completely
            M117

            RESTORE_GCODE_STATE NAME=unload_filament
        {% endif %}
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set global = printer["gcode_macro global"] %}

    {% if not "xyz" in printer.toolhead.homed_axes %}
        { action_raise_error("Please home first!") }
        M117 Please home first!
    {% else %}
        {% if not printer.extruder.temperature >= 200 %}
            { action_raise_error("Heat up nozzle first!") }
            M117 Heat up nozzle first!
        {% else %}
            SAVE_GCODE_STATE NAME=load_filament

            BUCKET_POSITION

            ; Extruder in relative mode
            M83

            M117 Get ready...
            ; Wait until operator is ready
            G4 S3

            M117 Loading
            G1 E10 F{global.extrude_fr}          ; extrude to fill the extruder
            M117 Filling Hotend
            G1 E35 F{global.extrude_fast_fr}     ; extrude to fill the hotend
            G1 E35 F{global.extrude_fast_fr}     ; ...

            PURGE_NOZZLE
            CLEAN_NOZZLE

            RESTORE_GCODE_STATE NAME=load_filament

            G1 E-1 F{global.retraction_fr}       ; Retract outside the SAVE_GCODE_STATE

            M117
        {% endif %}
    {% endif %}

#####################################################################
#    Overrides to add Status Leds
#####################################################################

[gcode_macro M84]
rename_existing: M000084
gcode:
    M000084 { rawparams }
    STATUS_OFF

[gcode_macro M18]
rename_existing: M000018
gcode:
    M000018 { rawparams }
    STATUS_OFF

[gcode_macro M109]
rename_existing: M0000109
gcode:
    STATUS_HEATING
    M0000109 { rawparams }

[gcode_macro M190]
rename_existing: M0000190
gcode:
    STATUS_HEATING
    M0000190 { rawparams }
